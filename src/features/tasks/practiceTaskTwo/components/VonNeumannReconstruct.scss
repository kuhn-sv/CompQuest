@use '../../../../styles/variables';
@use '../../../../styles/theme';

.vn-reconstruct {
  position: relative;
  height: 100%;
  max-height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  box-sizing: border-box;
  padding: 1.25rem 1rem;
}

.vn-reconstruct__content {
  display: grid;
  grid-template-columns: 1.2fr 0.8fr;
  gap: 2rem;
  align-items: start;
  max-width: 1200px;
  margin: 0 auto;

  @media (max-width: 900px) {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

.vn-reconstruct__diagram {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.vn-reconstruct__title {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text);
  margin: 0 0 0.25rem 0;
}

.vn-reconstruct__subtitle {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin: 0 0 1rem 0;
}

// Architecture container
.architecture-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 12px;
  padding: 1.5rem;
}

// CPU Container
.cpu-container {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.01);
}

.cpu-label {
  font-size: 0.95rem;
  font-weight: 600;
  color: var(--text);
  text-align: center;
  margin-bottom: 0.5rem;
}

.cpu-zones {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
}

// Bottom row
.bottom-row {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.75rem;
}

// Drop zones
.drop-zone {
  min-height: 60px;
  padding: 0.75rem;
  border: 2px dashed rgba(255, 255, 255, 0.15);
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.02);
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  position: relative;

  &::before {
    content: attr(data-label);
    position: absolute;
    font-size: 0.75rem;
    color: rgba(255, 255, 255, 0.3);
    pointer-events: none;
  }

  &.has-component {
    border-style: solid;
    border-color: rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.05);
    color: var(--text);
    font-weight: 500;

    &::before {
      display: none;
    }
  }

  &.is-over {
    border-color: var(--primary);
    background: rgba(var(--primary-rgb), 0.1);
    transform: scale(1.02);
  }

  // Evaluation states
  &.is-correct {
    border-color: var(--success) !important;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04), 0 0 12px var(--success);
    background: rgba(var(--success-rgb, 34, 197, 94), 0.1);
  }

  &.is-wrong {
    border-color: var(--error) !important;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04), 0 0 12px var(--error);
    background: rgba(var(--error-rgb, 239, 68, 68), 0.1);
  }
}

// Placed components inside drop zones (make them draggable)
.placed-component {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: grab;
  user-select: none;
  touch-action: none;

  &:active {
    cursor: grabbing;
  }

  &.is-dragging {
    opacity: 0.5;
    cursor: grabbing;
  }
}

// Draggable components (right side)
.vn-reconstruct__components {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  position: sticky;
  top: 1rem;
  max-height: calc(100vh - 300px);
  overflow-y: auto;

  @media (max-width: 900px) {
    position: static;
    max-height: none;
  }
}

.draggable-component {
  padding: 0.85rem 1rem;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.05);
  border: 2px solid rgba(255, 255, 255, 0.1);
  color: var(--text);
  font-size: 0.9rem;
  font-weight: 500;
  cursor: grab;
  transition: all 0.2s ease;
  text-align: center;
  user-select: none;
  touch-action: none;

  &:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.15);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  &:active {
    cursor: grabbing;
  }

  &.is-placed {
    opacity: 0.3;
    cursor: not-allowed;
    pointer-events: none;
  }

  &.is-dragging {
    opacity: 0.5;
    cursor: grabbing;
  }

  &.is-selected {
    border-color: var(--primary);
    background: rgba(var(--primary-rgb), 0.15);
    box-shadow: 0 0 12px rgba(var(--primary-rgb), 0.4);
  }

  &.is-overlay {
    cursor: grabbing;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
    transform: rotate(2deg);
  }
}

// Mobile optimizations
@media (max-width: 600px) {
  .vn-reconstruct {
    padding: 1rem 0.75rem;
  }

  .architecture-container {
    padding: 1rem;
  }

  .cpu-zones,
  .bottom-row {
    gap: 0.5rem;
  }

  .drop-zone {
    min-height: 50px;
    font-size: 0.85rem;
    padding: 0.5rem;
  }

  .draggable-component {
    padding: 0.75rem;
    font-size: 0.85rem;
  }
}


