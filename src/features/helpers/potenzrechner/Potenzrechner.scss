@use '../../../styles/_variables' as *;

.potenzrechner {
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: flex-start; // align to top
  align-items: stretch;
  width: 100%;
  height: 100%;
  font-size: 20px;

  // Tabs are full-width by component styles; ensure they stick to top
  > .tabs {
    margin-top: 0.5rem;
  }

  &__body {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    min-height: 0;
    flex: 1 1 auto;
    padding: 20px;
  }

  &__content {
    flex: 1 1 auto;
    display: flex;
    align-items: center; // vertical center of main content
    justify-content: center;
    width: 100%;
  }

  // Tabs styling moved to TabRow.component.scss

  .task-statement {
    color: var(--text);
    .hint { color: var(--text-secondary); font-size: 0.9rem; }
  }

  .expression {
    margin-top: 1rem;
    padding: 1rem;
    border: 1px solid var(--surface-border);
    border-radius: 12px;
    background: var(--surface);
    align-self: stretch; // full width at the bottom
    .term { color: var(--text); }
    .base { margin-left: 2px; font-size: 0.9rem; color: var(--text-secondary); }
    .placeholder { color: var(--text-secondary); }
    .result.ok { color: var(--success); }
    .result.err { color: var(--error); }
  }

  .digits-board {
    display: grid;
    gap: 10px;
    position: relative; // provide positioning context
    .digits-row {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
      .digit {
        width: 64px;
        height: 48px;
        border: 1px solid var(--primary);
        border-radius: 8px;
        font-size: 1.1rem;
        background: var(--surface);
        color: var(--text);
        position: relative; // anchor dropdown
        z-index: 1; // ensure it's above backgrounds
      }
    }
    .powers-row {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
      .power { text-align: center; color: var(--text-secondary); }
    }
  }

  .sum-line { margin-top: 1rem; }

  // Adjust grid for hex (3 digits)
  .digits-board.hex {
    .digits-row {
      grid-template-columns: repeat(3, 1fr);
    }
    .powers-row {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}
